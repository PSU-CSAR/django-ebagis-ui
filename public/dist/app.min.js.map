{"version":3,"sources":["app/app.ts","auth/auth.ts","demo/demo.ts","auth/controllers/authrequired.ts","auth/controllers/login.ts","auth/controllers/logout.ts","auth/controllers/main.ts","auth/controllers/master.ts","auth/controllers/passwordchange.ts","auth/controllers/passwordreset.ts","auth/controllers/passwordresetconfirm.ts","auth/controllers/register.ts","auth/controllers/restricted.ts","auth/controllers/userprofile.ts","auth/controllers/verifyemail.ts","auth/services/djangoAuth.ts","auth/services/validate.ts","templates.ts"],"names":["angular","module","config","$routeProvider","when","templateUrl","controller","resolve","authenticated","djangoAuth","authenticationStatus","otherwise","redirectTo","run","initialize","app","demo","DemoCtrl","$scope","this","DemoService","getExcited","directive","controllerAs","factory","awesomeThings","$location","Validate","model","username","password","complete","login","formData","errors","form_validation","$invalid","then","data","path","logout","$cookies","prompt","handleSuccess","handleError","resetPassword","register","verify","goVerify","changePassword","profile","updateProfile","first_name","last_name","email","confirmReset","goConfirmReset","response","show_login","$on","ev","current","previous","rejection","console","error","replace","new_password1","new_password2","$routeParams","password1","password2","success","failure","service","$q","$http","$rootScope","API_URL","use_session","authPromise","request","args","get","defaults","headers","common","Authorization","params","deferred","defer","url","method","withCredentials","toUpperCase","X-CSRFToken","bind","status","log","reject","promise","more","extend","key","put","$broadcast","remove","uid","token","restrict","force","da","getAuthStatus","sessions","message","minlength","maxlength","required","more_messages","check_more_messages","name","validation_messages","field","form","error_bin","messages","e","$error","special_message","push","deduped_messages","forEach","el","i","indexOf","substr","$templateCache"],"mappings":"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","file":"app.min.js","sourcesContent":["/// <reference path=\"../../../typings/main.d.ts\" />\n\nangular.module('ebagis', [\n    'app.templates',\n    'auth'\n]);\n\n// your app setup here\n","'use strict';\n\nangular.module('auth', [\n  'app.templates',\n  'ngCookies',\n  'ngResource',\n  'ngSanitize',\n  'ngRoute',\n])\n  .config(function ($routeProvider) {\n    $routeProvider\n      .when('/', {\n      templateUrl: 'app-templates/auth/views/main.html',\n        controller: 'MainCtrl',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/register', {\n        templateUrl: 'app-templates/auth/views/register.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/passwordReset', {\n        templateUrl: 'app-templates/auth/views/passwordreset.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/passwordResetConfirm/:firstToken/:passwordResetToken', {\n        templateUrl: 'app-templates/auth/views/passwordresetconfirm.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/login', {\n        templateUrl: 'app-templates/auth/views/login.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/verifyEmail/:emailVerificationToken', {\n        templateUrl: 'app-templates/auth/views/verifyemail.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/logout', {\n        templateUrl: 'app-templates/auth/views/logout.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/userProfile', {\n        templateUrl: 'app-templates/auth/views/userprofile.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/passwordChange', {\n        templateUrl: 'app-templates/auth/views/passwordchange.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/restricted', {\n        templateUrl: 'app-templates/auth/views/restricted.html',\n        controller: 'RestrictedCtrl',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/authRequired', {\n        templateUrl: 'app-templates/auth/views/authrequired.html',\n        controller: 'AuthrequiredCtrl',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus(true);\n          }],\n        }\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n  })\n  .run(function(djangoAuth){\n  djangoAuth.initialize('https://test.ebagis.geog.pdx.edu/api/rest/account', false);\n  });\n","/// <reference path=\"../../../typings/main.d.ts\" />\n\nmodule app.demo {\n\n    'use strict';\n\n    export interface IDemoCtrl {}\n    export class DemoCtrl implements IDemoCtrl {\n        constructor(\n            public $scope: ng.IScope\n        ){}\n    }\n\n    export interface IDemoService {\n        getExcited: boolean;\n    }\n    export class DemoService implements IDemoService {\n        getExcited: boolean = false;\n    }\n\n    angular\n        .module('app.demo', [])\n        .directive(\"demo\", function(): ng.IDirective {\n            return {\n                templateUrl: 'app-templates/demo/demo.html',\n                controller:  DemoCtrl,\n                controllerAs: 'demoCtrlVM'\n            };\n        })\n        .controller(\"demoCtrl\", DemoCtrl)\n        .factory(\"demoService\", [() => new app.demo.DemoService()]);\n}\n","'use strict';\n\n/**\n * @ngdoc function\n * @name angularDjangoRegistrationAuthApp.controller:AuthrequiredCtrl\n * @description\n * # AuthrequiredCtrl\n * Controller of the angularDjangoRegistrationAuthApp\n */\nangular.module('auth')\n  .controller('AuthrequiredCtrl', function ($scope) {\n    $scope.awesomeThings = [\n      'HTML5 Boilerplate',\n      'AngularJS',\n      'Karma'\n    ];\n  });\n","'use strict';\n\nangular.module('auth')\n  .controller('LoginCtrl', function ($scope, $location, djangoAuth, Validate) {\n    $scope.model = {'username':'','password':''};\n  \t$scope.complete = false;\n    $scope.login = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.login($scope.model.username, $scope.model.password)\n        .then(function(data){\n        \t// success case\n        \t$location.path(\"/\");\n        },function(data){\n        \t// error case\n        \t$scope.errors = data;\n        });\n      }\n    }\n  });\n","'use strict';\n\nangular.module('auth')\n  .controller('LogoutCtrl', function ($scope, $location, djangoAuth) {\n    djangoAuth.logout();\n  });\n","'use strict';\n\nangular.module('auth')\n  .controller('MainCtrl', function ($scope, $cookies, $location, djangoAuth) {\n    \n    $scope.login = function(){\n      djangoAuth.login(prompt('Username'),prompt('password'))\n      .then(function(data){\n        handleSuccess(data);\n      },handleError);\n    }\n    \n    $scope.logout = function(){\n      djangoAuth.logout()\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.resetPassword = function(){\n      djangoAuth.resetPassword(prompt('Email'))\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.register = function(){\n      djangoAuth.register(prompt('Username'),prompt('Password'),prompt('Email'))\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.verify = function(){\n      djangoAuth.verify(prompt(\"Please enter verification code\"))\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.goVerify = function(){\n      $location.path(\"/verifyEmail/\"+prompt(\"Please enter verification code\"));\n    }\n    \n    $scope.changePassword = function(){\n      djangoAuth.changePassword(prompt(\"Password\"), prompt(\"Repeat Password\"))\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.profile = function(){\n      djangoAuth.profile()\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.updateProfile = function(){\n      djangoAuth.updateProfile({'first_name': prompt(\"First Name\"), 'last_name': prompt(\"Last Name\"), 'email': prompt(\"Email\")})\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.confirmReset = function(){\n      djangoAuth.confirmReset(prompt(\"Code 1\"), prompt(\"Code 2\"), prompt(\"Password\"), prompt(\"Repeat Password\"))\n      .then(handleSuccess,handleError);\n    }\n\n    $scope.goConfirmReset = function(){\n      $location.path(\"/passwordResetConfirm/\"+prompt(\"Code 1\")+\"/\"+prompt(\"Code 2\"))\n    }\n    \n    var handleSuccess = function(data){\n      $scope.response = data;\n    }\n    \n    var handleError = function(data){\n      $scope.response = data;\n    }\n\n    $scope.show_login = true;\n    $scope.$on(\"djangoAuth.logged_in\", function(data){\n      $scope.show_login = false;\n    });\n    $scope.$on(\"djangoAuth.logged_out\", function(data){\n      $scope.show_login = true;\n    });\n\n  });\n","'use strict';\n\nangular.module('auth')\n  .controller('MasterCtrl', function ($scope, $location, djangoAuth) {\n    // Assume user is not logged in until we hear otherwise\n    $scope.authenticated = false;\n    // Wait for the status of authentication, set scope var to true if it resolves\n    djangoAuth.authenticationStatus(true).then(function(){\n        $scope.authenticated = true;\n    });\n    // Wait and respond to the logout event.\n    $scope.$on('djangoAuth.logged_out', function() {\n      $scope.authenticated = false;\n    });\n    // Wait and respond to the log in event.\n    $scope.$on('djangoAuth.logged_in', function() {\n      $scope.authenticated = true;\n    });\n    // If the user attempts to access a restricted page, redirect them back to the main page.\n    $scope.$on('$routeChangeError', function(ev, current, previous, rejection){\n      console.error(\"Unable to change routes.  Error: \", rejection)\n      $location.path('/restricted').replace();\n    });\n  });\n","'use strict';\n\nangular.module('auth')\n  .controller('PasswordchangeCtrl', function ($scope, djangoAuth, Validate) {\n    $scope.model = {'new_password1':'','new_password2':''};\n  \t$scope.complete = false;\n    $scope.changePassword = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.changePassword($scope.model.new_password1, $scope.model.new_password2)\n        .then(function(data){\n        \t// success case\n        \t$scope.complete = true;\n        },function(data){\n        \t// error case\n        \t$scope.errors = data;\n        });\n      }\n    }\n  });\n","'use strict';\n\nangular.module('auth')\n  .controller('PasswordresetCtrl', function ($scope, djangoAuth, Validate) {\n    $scope.model = {'email':''};\n  \t$scope.complete = false;\n    $scope.resetPassword = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.resetPassword($scope.model.email)\n        .then(function(data){\n        \t// success case\n        \t$scope.complete = true;\n        },function(data){\n        \t// error case\n        \t$scope.errors = data;\n        });\n      }\n    }\n  });\n","'use strict';\n\nangular.module('auth')\n  .controller('PasswordresetconfirmCtrl', function ($scope, $routeParams, djangoAuth, Validate) {\n    $scope.model = {'new_password1':'','new_password2':''};\n  \t$scope.complete = false;\n    $scope.confirmReset = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.confirmReset($routeParams['firstToken'], $routeParams['passwordResetToken'], $scope.model.new_password1, $scope.model.new_password2)\n        .then(function(data){\n        \t// success case\n        \t$scope.complete = true;\n        },function(data){\n        \t// error case\n        \t$scope.errors = data;\n        });\n      }\n    }\n  });\n","'use strict';\n\nangular.module('auth')\n  .controller('RegisterCtrl', function ($scope, djangoAuth, Validate) {\n  \t$scope.model = {'username':'','password':'','email':''};\n  \t$scope.complete = false;\n    $scope.register = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.register($scope.model.username,$scope.model.password1,$scope.model.password2,$scope.model.email)\n        .then(function(data){\n        \t// success case\n        \t$scope.complete = true;\n        },function(data){\n        \t// error case\n        \t$scope.errors = data;\n        });\n      }\n    }\n  });\n","'use strict';\n\n/**\n * @ngdoc function\n * @name angularDjangoRegistrationAuthApp.controller:RestrictedCtrl\n * @description\n * # RestrictedCtrl\n * Controller of the angularDjangoRegistrationAuthApp\n */\nangular.module('auth')\n  .controller('RestrictedCtrl', function ($scope, $location) {\n    $scope.$on('djangoAuth.logged_in', function() {\n      $location.path('/');\n    });\n  });\n","'use strict';\n\nangular.module('auth')\n  .controller('UserprofileCtrl', function ($scope, djangoAuth, Validate) {\n    $scope.model = {'first_name':'','last_name':'','email':''};\n  \t$scope.complete = false;\n  \tdjangoAuth.profile().then(function(data){\n  \t\t$scope.model = data;\n  \t});\n    $scope.updateProfile = function(formData, model){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.updateProfile(model)\n        .then(function(data){\n        \t// success case\n        \t$scope.complete = true;\n        },function(data){\n        \t// error case\n        \t$scope.error = data;\n        });\n      }\n    }\n  });\n","'use strict';\n\nangular.module('auth')\n  .controller('VerifyemailCtrl', function ($scope, $routeParams, djangoAuth) {\n    djangoAuth.verify($routeParams[\"emailVerificationToken\"]).then(function(data){\n    \t$scope.success = true;\n    },function(data){\n    \t$scope.failure = false;\n    });\n  });\n","'use strict';\n\nangular.module('auth')\n  .service('djangoAuth', function djangoAuth($q, $http, $cookies, $rootScope) {\n    // AngularJS will instantiate a singleton by calling \"new\" on this function\n    var service = {\n        /* START CUSTOMIZATION HERE */\n        // Change this to point to your Django REST Auth API\n        // e.g. /api/rest-auth  (DO NOT INCLUDE ENDING SLASH)\n        'API_URL': '/api/rest/account',\n        // Set use_session to true to use Django sessions to store security token.\n        // Set use_session to false to store the security token locally and transmit it as a custom header.\n        'use_session': false,\n        /* END OF CUSTOMIZATION */\n        'authenticated': null,\n        'authPromise': null,\n        'request': function(args) {\n            // Let's retrieve the token from the cookie, if available\n            if($cookies.get('token')){\n                $http.defaults.headers.common.Authorization = 'Token ' + $cookies.get('token');\n            }\n            // Continue\n            params = args.params || {}\n            args = args || {};\n            var deferred = $q.defer(),\n                url = this.API_URL + args.url,\n                method = args.method || \"GET\",\n                params = params,\n                data = args.data || {};\n            // Fire the request, as configured.\n            $http({\n                url: url,\n                withCredentials: this.use_session,\n                method: method.toUpperCase(),\n                headers: {'X-CSRFToken': $cookies['csrftoken']},\n                params: params,\n                data: data\n            })\n            .success(angular.bind(this,function(data, status, headers, config) {\n                deferred.resolve(data, status);\n            }))\n            .error(angular.bind(this,function(data, status, headers, config) {\n                console.log(\"error syncing with: \" + url);\n                // Set request status\n                if(data){\n                    data.status = status;\n                }\n                if(status == 0){\n                    if(data == \"\"){\n                        data = {};\n                        data['status'] = 0;\n                        data['non_field_errors'] = [\"Could not connect. Please try again.\"];\n                    }\n                    // or if the data is null, then there was a timeout.\n                    if(data == null){\n                        // Inject a non field error alerting the user\n                        // that there's been a timeout error.\n                        data = {};\n                        data['status'] = 0;\n                        data['non_field_errors'] = [\"Server timed out. Please try again.\"];\n                    }\n                }\n                deferred.reject(data, status, headers, config);\n            }));\n            return deferred.promise;\n        },\n        'register': function(username,password1,password2,email,more){\n            var data = {\n                'username':username,\n                'password1':password1,\n                'password2':password2,\n                'email':email\n            }\n            data = angular.extend(data,more);\n            return this.request({\n                'method': \"POST\",\n                'url': \"/registration/\",\n                'data' :data\n            });\n        },\n        'login': function(username,password){\n            var djangoAuth = this;\n            return this.request({\n                'method': \"POST\",\n                'url': \"/login/\",\n                'data':{\n                    'username':username,\n                    'password':password\n                }\n            }).then(function(data){\n                if(!djangoAuth.use_session){\n                    $http.defaults.headers.common.Authorization = 'Token ' + data.key;\n                    $cookies.put(\"token\", data.key);\n                }\n                djangoAuth.authenticated = true;\n                $rootScope.$broadcast(\"djangoAuth.logged_in\", data);\n            });\n        },\n        'logout': function(){\n            var djangoAuth = this;\n            return this.request({\n                'method': \"POST\",\n                'url': \"/logout/\"\n            }).then(function(data){\n            delete $http.defaults.headers.common.Authorization;\n                $cookies.remove('token');\n                djangoAuth.authenticated = false;\n                $rootScope.$broadcast(\"djangoAuth.logged_out\");\n            });\n        },\n        'changePassword': function(password1,password2){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/password/change/\",\n                'data':{\n                    'new_password1':password1,\n                    'new_password2':password2\n                }\n            });\n        },\n        'resetPassword': function(email){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/password/reset/\",\n                'data':{\n                    'email':email\n                }\n            });\n        },\n        'profile': function(){\n            return this.request({\n                'method': \"GET\",\n                'url': \"/user/\"\n            }); \n        },\n        'updateProfile': function(data){\n            return this.request({\n                'method': \"PATCH\",\n                'url': \"/user/\",\n                'data':data\n            }); \n        },\n        'verify': function(key){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/registration/verify-email/\",\n                'data': {'key': key} \n            });            \n        },\n        'confirmReset': function(uid,token,password1,password2){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/password/reset/confirm/\",\n                'data':{\n                    'uid': uid,\n                    'token': token,\n                    'new_password1':password1,\n                    'new_password2':password2\n                }\n            });\n        },\n        'authenticationStatus': function(restrict, force){\n            // Set restrict to true to reject the promise if not logged in\n            // Set to false or omit to resolve when status is known\n            // Set force to true to ignore stored value and query API\n            restrict = restrict || false;\n            force = force || false;\n            if(this.authPromise == null || force){\n                this.authPromise = this.request({\n                    'method': \"GET\",\n                    'url': \"/user/\"\n                })\n            }\n            var da = this;\n            var getAuthStatus = $q.defer();\n            if(this.authenticated != null && !force){\n                // We have a stored value which means we can pass it back right away.\n                if(this.authenticated == false && restrict){\n                    getAuthStatus.reject(\"User is not logged in.\");\n                }else{\n                    getAuthStatus.resolve();\n                }\n            }else{\n                // There isn't a stored value, or we're forcing a request back to\n                // the API to get the authentication status.\n                this.authPromise.then(function(){\n                    da.authenticated = true;\n                    getAuthStatus.resolve();\n                },function(){\n                    da.authenticated = false;\n                    if(restrict){\n                        getAuthStatus.reject(\"User is not logged in.\");\n                    }else{\n                        getAuthStatus.resolve();\n                    }\n                });\n            }\n            return getAuthStatus.promise;\n        },\n        'initialize': function(url, sessions){\n            this.API_URL = url;\n            this.use_session = sessions;\n            return this.authenticationStatus();\n        }\n\n    }\n    return service;\n  });\n","'use strict';\n\nangular.module('auth')\n  .service('Validate', function Validate() {\n    return {\n        'message': {\n            'minlength': 'This value is not long enough.',\n            'maxlength': 'This value is too long.',\n            'email': 'A properly formatted email address is required.',\n            'required': 'This field is required.'\n        },\n        'more_messages': {\n            'demo': {\n                'required': 'Here is a sample alternative required message.'\n            }\n        },\n        'check_more_messages': function(name,error){\n            return (this.more_messages[name] || [])[error] || null;\n        },\n        validation_messages: function(field,form,error_bin){\n            var messages = [];\n            for(var e in form[field].$error){\n                if(form[field].$error[e]){\n                    var special_message = this.check_more_messages(field,e);\n                    if(special_message){\n                        messages.push(special_message);\n                    }else if(this.message[e]){\n                        messages.push(this.message[e]);\n                    }else{\n                        messages.push(\"Error: \" + e)\n                    }\n                }\n            }\n            var deduped_messages = [];\n            angular.forEach(messages, function(el, i){\n                if(deduped_messages.indexOf(el) === -1) deduped_messages.push(el);\n            });\n            if(error_bin){\n                error_bin[field] = deduped_messages;\n            }\n        },\n        'form_validation': function(form,error_bin){\n            for(var field in form){\n                if(field.substr(0,1) != \"$\"){\n                    this.validation_messages(field,form,error_bin);\n                }\n            }\n        }\n    }\n});\n",null],"sourceRoot":"/source/"}