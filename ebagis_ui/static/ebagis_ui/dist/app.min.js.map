{"version":3,"sources":["app/app.ts","templates.ts"],"names":["app","angular","module","directive","$rootScope","UserProfile","linkFn","scope","element","attrs","authenticated","user","data","$on","$apply","console","log","restrict","templateUrl","link","config","$stateProvider","$urlRouterProvider","$locationProvider","auth","anon","Auth","isAnonymous","isAuthenticated","admin","hasRole","html5Mode","otherwise","state","url","controller","resolve","userProfile","factory","OK","UNAUTHORIZED","FORBIDDEN","NOTFOUND","role","Promise","reject","hasAnyRole","roles","force","then","err","UserProfileClass","api","rootScope","this","authPromise","initialize","prototype","authenticationStatus","setAuthenticated","val","$broadcast","getAuthenticated","refresh","up","profile","response","clearUserToken","indexOf","filter","length","promise","login","username","password","logout","service","run","$state","event","toState","toParams","fromState","fromParams","error","go","$scope","ebagisAPI","Validate","model","first_name","last_name","email","complete","updateProfile","formData","errors","form_validation","$invalid","awesomeThings","http","cookies","$http","$cookies","API_URL","window","appConfig","restURL","use_session","request","args","trace","get","defaults","headers","common","Authorization","params","method","withCredentials","toUpperCase","X-CSRFToken","success","bind","status","remove","register","password1","password2","more","activation_url","href","replace","extend","key","put","changePassword","new_password1","new_password2","resetPassword","reset_url","site_name","verify","confirmReset","uid","token","sessions","$location","prompt","handleSuccess","handleError","goVerify","path","goConfirmReset","show_login","MapClass","map","L","setView","Map","insensitive","s1","s2","s1lower","toLowerCase","s2lower","addFeatureRows","sortState","aoi_names","sort","reverse","$","empty","i","toAdd","append","formatJSON","obj","currKey","recurse","indent","content2","value","String","fromCharCode","repeat","content","geojson_layer","tokenval","controlBar","control","bar","position","visible","addControl","defaultStyle","tileLayer","attribution","addTo","color","weight","fillOpacity","highlightStyle","fillColor","jQuery","ajax","type","datatype","Array","geoJson","onEachFeature","feature","layer","bindPopup","properties","name","style","fitBounds","getBounds","animate","scale","document","on","getAttribute","aoiname","eachLayer","setStyle","bringToFront","substring","maxZoom","resetStyle","hide","setContent","setTimeout","show","intersects","getLatLngs","push","$timeout","processForm","message","$stateParams","minlength","maxlength","required","more_messages","demo","check_more_messages","validation_messages","field","form","error_bin","messages","e","$error","special_message","deduped_messages","forEach","el","substr","failure","$templateCache"],"mappings":"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","file":"app.min.js","sourcesContent":["/// <reference path=\"../../../typings/main.d.ts\" />\n\nvar app = angular.module('ebagis', [\n    'app.templates',\n    'ui.bootstrap',\n    'ngCookies',\n    'ngResource',\n    'ngSanitize',\n    'ui.router',\n]);\n\napp.directive('header', ['$rootScope', 'UserProfile', function($rootScope, UserProfile){\n   var linkFn = function(scope, element, attrs) {       \n        scope.authenticated = false;\n        scope.user = UserProfile.data;\n        \n        $rootScope.$on('UserProfile.authenticated', function() {\n            scope.$apply(function() {\n                scope.authenticated = true;\n                scope.user = UserProfile.data;\n                console.log(\"user after login: \", scope.user);\n            });\n        });\n\n        $rootScope.$on('UserProfile.unauthenticated', function() {\n            scope.$apply(function() {\n                scope.authenticated = false;\n                scope.user = UserProfile.data;\n                console.log(\"user after logout: \", scope.user);\n            });\n        });\n    };\n\n    return {\n        restrict: 'E',\n        templateUrl: 'app-templates/app/partial/header/header.html',\n        link: linkFn,\n    };\n}]);\n\napp.directive('headerAccount', function(){\n    return {\n        restrict: 'E',\n        templateUrl: 'app-templates/app/partial/header/account.html',\n    };\n});\n\napp.config([\"$stateProvider\", '$urlRouterProvider', '$locationProvider', function ($stateProvider, $urlRouterProvider, $locationProvider) {\n\n    // standard auth types\n    var auth = {\n        anon: [\"Auth\", function (Auth) { return Auth.isAnonymous(true); }],\n        auth: [\"Auth\", function (Auth) { return Auth.isAuthenticated(true); }],\n        admin: [\"Auth\", function (Auth) { return Auth.hasRole(\"ROLE_ADMIN\"); }],\n    }\n\n    // remove the # from urls where supported\n    $locationProvider.html5Mode(true);\n\n    // set the default route -> redirect requests to unrecognized pages\n    // might consider making a 404 page and redirecting to that\n    $urlRouterProvider.otherwise('404');\n\n    // setup the states (routes) on the stateProvider\n    $stateProvider\n\n    // anyone states\n    .state(\"forbidden\", {\n            /* ... */\n     })\n\n    .state(\"404\", {\n        url: '/404',\n        templateUrl: 'app-templates/app/partial/main/404.html',\n     })\n    \n    // anonymous states\n    .state(\"login\", {\n        url: '/account/login',\n        templateUrl: 'app-templates/app/partial/account/login.html',\n        controller: 'LoginController',\n        resolve: {\n            auth: auth.anon,\n            userProfile: \"UserProfile\",\n        }\n    })\n\n    .state(\"register\", {\n        url: '/account/register',\n        templateUrl: 'app-templates/app/partial/account/register.html',\n        controller: 'RegisterController',\n        resolve: {\n            auth: auth.anon,\n            userProfile: \"UserProfile\",\n        }\n    })\n\n    .state(\"forgot\", {\n        url: '/account/reset',\n        templateUrl: 'app-templates/app/partial/account/passwordreset.html',\n        controller: 'PasswordResetController',\n        resolve: {\n            auth: auth.anon,\n            userProfile: \"UserProfile\",\n        }\n    })\n\n    .state(\"resetConfirm\", {\n        url: '/account/resetConfirm/{userToken:[0-9A-Za-z_\\-]+}/{passwordResetToken:[0-9A-Za-z]{1,13}-[0-9A-Za-z]{1,20}}',\n        //url: '/account/resetConfirm/:userToken/:passwordResetToken',\n        templateUrl: 'app-templates/app/partial/account/passwordresetconfirm.html',\n        controller: 'PasswordResetConfirmController',\n        resolve: {\n            auth: auth.anon,\n            userProfile: \"UserProfile\",\n        }\n    })\n\n    .state(\"verifyEmail\", {\n        url: '/account/verifyEmail/{emailVerificationToken:[0-9A-Za-z]{1,65}}',\n        templateUrl: 'app-templates/app/partial/account/verifyemail.html',\n        controller: 'VerifyEmailController',\n        resolve: {\n            auth: auth.anon,\n            userProfile: \"UserProfile\",\n        }\n    })\n\n\n    // authenticated states\n    .state(\"logout\", {\n        url: '/account/logout',\n        templateUrl: 'app-templates/app/partial/account/logout.html',\n        controller: 'LogoutController',\n        resolve: {\n            auth: auth.auth,\n            userProfile: \"UserProfile\",\n        }\n    })\n\n    .state(\"account\", {\n        url: '/account/',\n        templateUrl: 'app-templates/app/partial/account/account.html',\n        resolve: {\n            auth: auth.auth,\n            userProfile: \"UserProfile\",\n        }\n    })\n\n    .state(\"root\", {\n        url: '/',\n        controller: 'RootController',\n        resolve: {\n            auth: auth.auth,\n            userProfile: \"UserProfile\",\n        }\n    })\n\n    .state(\"home\", {\n        url: '/map',\n        templateUrl: 'app-templates/app/partial/map/map.html',\n        controller: 'MapController',\n        resolve: {\n            auth: auth.auth,\n            userProfile: \"UserProfile\",\n        }\n    })\n\n    // staff-only states\n\n    // admin-only states\n    .state(\"admin\", {\n        /* ... */\n        resolve: {\n            auth: auth.admin,\n        }\n    });\n\n}])\n\napp.factory(\"Auth\", [\"UserProfile\", function (UserProfile) {\n\n    var Auth = {\n\n        OK: 200,\n\n        // \"we don't know who you are, so we can't say if you're authorized to access\n        // this resource or not yet, please sign in first\"\n        UNAUTHORIZED: 401,\n\n        // \"we know who you are, and your profile does not allow you to access this resource\"\n        FORBIDDEN: 403,\n\n        NOTFOUND: 404,\n\n        hasRole: function(role) {\n            return new Promise(function(resolve, reject) {\n                if (UserProfile.hasRole(role)) {\n                    resolve(Auth.OK);\n                } else if (UserProfile.isAnonymous()) {\n                    reject(Auth.UNAUTHORIZED);\n                } else {\n                    reject(Auth.FORBIDDEN);\n                }\n            });\n        },\n\n        hasAnyRole: function(roles) {\n            return new Promise(function(resolve, reject) {\n                if (UserProfile.hasAnyRole(roles)) {\n                    resolve(Auth.OK);\n                } else if (UserProfile.isAnonymous()) {\n                    reject(Auth.UNAUTHORIZED);\n                } else {\n                    reject(Auth.FORBIDDEN);\n                }\n            });\n        },\n\n        isAnonymous: function(force) {\n            return new Promise(function(resolve, reject) {\n                UserProfile.isAnonymous(force).then(\n                    function() {\n                        resolve(Auth.OK);\n                    }).catch(function(err) {\n                        reject(Auth.FORBIDDEN);\n                    }\n                );\n            });\n        },\n\n        isAuthenticated: function(force) {\n            return new Promise(function(resolve, reject) {\n                UserProfile.isAuthenticated(force).then(\n                    function() {\n                        resolve(Auth.OK);\n                    }).catch(function(err) {\n                        reject(Auth.UNAUTHORIZED);\n                    }\n                );\n            });\n        },\n\n    };\n\n    return Auth;\n\n}])\n\nclass UserProfileClass {\n\n    constructor(api, rootScope) {\n        // use rootScope for signals to watchers\n        this.$rootScope = rootScope;\n\n        // need to store whether or not the current user is authenticated\n        this.authenticated = null,\n\n        // we use authPromise to store the last auth request made\n        // in case we've just made the request and it hasn't returned yet\n        // thus, we can be efficient and not request again unless forced\n        this.authPromise = null,\n        \n        // the service with the API methods\n        this.api = api;\n\n        // finally let's run some initialization logic\n        this.initialize();\n    }\n\n    initialize() {\n        // setup our API service\n        // first arg is the base URL of the server API\n        // second arg is a boolean of whether to use django sessions or not\n        //this.api.initialize(window.appConfig.urlBase + '/api/rest/account', false);\n        // run authenticationStatus the first time to determine initial\n        // value for this.authenticated\n        this.authenticationStatus(true).then(function() {\n            console.log(\"user is logged in on profile initialization\");\n        }).catch(function(err) {\n            console.log(\"profile error on initialization: \", err);\n        });\n    }\n\n    setAuthenticated(val) {\n        if (this.authenticated != val) {\n            this.authenticated = val;\n            if (val) {\n                this.$rootScope.$broadcast(\"UserProfile.authenticated\");\n            } else {\n                this.$rootScope.$broadcast(\"UserProfile.unauthenticated\");\n            }\n        }\n    }\n\n    getAuthenticated() {\n        return this.authenticated;\n    }\n\n    refresh() {\n        up = this\n        up.authPromise = new Promise(function(resolve, reject) {\n        //return new Promise(function(resolve, reject) {\n            up.api.profile().then(function(response) {\n                up.data = response;\n                up.setAuthenticated(true);\n                resolve(response);\n            }).catch(function(err) {\n                up.setAuthenticated(false);\n                // destroy any cached login tokens\n                up.api.clearUserToken();\n                reject(err);\n            });\n        });\n        return up.authPromise;\n    }\n\n    hasRole(role) {\n        return this.data.roles.indexOf(role) >= 0;\n    }\n\n    hasAnyRole(roles) {\n        return !!this.data.roles.filter(function (role) {\n            return roles.indexOf(role) >= 0;\n        }).length;\n    }\n\n    isAnonymous(force) {\n        up = this\n        return new Promise(function(resolve, reject) {\n            up.authenticationStatus(force).then(\n                function() {\n                    reject();\n                }).catch(function(err) {\n                    resolve(err);\n                }\n            );\n        });\n    }\n\n    isAuthenticated(force) {\n        up = this\n        return new Promise(function(resolve, reject) {\n            up.authenticationStatus(force).then(\n                function() {\n                    resolve();\n                }).catch(function(err) {\n                    reject(err);\n                }\n            );\n        });\n    }\n\n    authenticationStatus(force) {\n        // Set force to true to ignore stored value and query API\n        force = force || false;\n        var up = this;\n        return new Promise(function(resolve, reject) {\n            if (up.authPromise != null && !force) {\n                // we have a stored promise\n                promise = up.authPromise;\n            } else {\n                // we don't have a strored promise, or we're forcing a\n                // request back to the API to verify the authentication status\n                promise = up.refresh();\n            }\n            promise.then(function() {\n                resolve();\n            }).catch(function(err) {\n                reject(\"User is not logged in.\", err);\n            });\n        });\n    }\n\n    login(username, password) {\n        up = this;\n        return up.api.login(username, password).then(function() {\n            return up.authenticationStatus(true).then(function() {\n                up.$rootScope.$broadcast(\"UserProfile.logged_in\", data);\n            }).catch(function(err) {\n                console.log(err);\n            });\n        }).catch(function(err) {\n            console.log(err);\n        });\n    }\n\n    logout() {\n        up = this;\n        return up.api.logout().then(function(){\n            up.data = null;\n            up.authPromise = null;\n            up.setAuthenticated(false);\n            up.$rootScope.$broadcast(\"UserProfile.logged_out\");\n        }).catch(function(err) {\n            console.log(err);\n        });\n    }\n}\n\napp.service(\"UserProfile\", [\"ebagisAPI\", \"$rootScope\", UserProfileClass]);\n\napp.run([\"$rootScope\", \"Auth\", \"$state\", \"UserProfile\", function ($rootScope, Auth, $state, UserProfile) {\n    // if a user trys to go to a page they can't access, redirect them\n    $rootScope.$on(\"$stateChangeError\", function (event, toState, toParams, fromState, fromParams, error) {\n        console.log(\"caught an auth error: request to \", toState,\" with params \", toParams, \" returned \", error);\n        if (error == Auth.UNAUTHORIZED) {\n            console.log(\"unauthed: go to login\");\n            $state.go(\"login\");\n        } else if (error == Auth.FORBIDDEN) {\n            console.log(\"forbidden: go home\");\n            $state.go(\"root\");\n        } else if (error == Auth.NOTFOUND) {\n            console.log(\"not found: go 404\");\n            $state.go(\"404\");\n        }\n    });\n}])\n\napp.controller('RootController', ['$scope', '$state', function ($scope, $state) {\n    $state.go(\"home\");\n}]);\n\napp.controller('UserProfileController', ['$scope', 'ebagisAPI', 'Validate', 'UserProfile', function ($scope, ebagisAPI, Validate, UserProfile) {\n    $scope.model = {'first_name':'','last_name':'','email':''};\n    $scope.complete = false;\n   \n    console.log(UserProfile.data);\n    $scope.model = UserProfile.data;\n\n    $scope.updateProfile = function(formData, model){\n        $scope.errors = [];\n        Validate.form_validation(formData,$scope.errors);\n        if (!formData.$invalid) {\n        ebagisAPI.updateProfile(model)\n            .then(function(data) {\n                // success case\n                $scope.complete = true;\n            }, function(data) {\n                // error case\n                $scope.error = data;\n            });\n        }\n    }\n}]);\n\napp.controller('AuthrequiredCtrl', function ($scope) {\n    $scope.awesomeThings = [\n      'HTML5 Boilerplate',\n      'AngularJS',\n      'Karma'\n    ];\n  });\n\n\nclass ebagisAPI {\n    \n    constructor(http, cookies, state) {\n        this.$http = http;\n        this.$cookies = cookies;\n        this.$state = state;\n\n        // Change this to point to your Django REST Auth API\n        // e.g. /api/rest-auth  (DO NOT INCLUDE ENDING SLASH)\n        this.API_URL = window.appConfig.restURL + '/account';\n        // Set use_session to true to use Django sessions to store security token.\n        // Set use_session to false to store the security token locally and transmit it as a custom header.\n        this.use_session = false;\n    }\n\n    request(args) {    \n        // uncomment next line for request tracing\n        console.trace();\n\n        // Let's retrieve the token from the cookie, if available\n        if (this.$cookies.get('token')) {\n            this.$http.defaults.headers.common.Authorization = 'Token ' + this.$cookies.get('token');\n        }\n        \n        // Continue\n        params = args.params || {}\n        args = args || {};\n        url = this.API_URL + args.url,\n        method = args.method || \"GET\",\n        params = params,\n        data = args.data || {};\n        api = this;\n\n        return new Promise(function(resolve, reject) {\n            // Fire the request, as configured.\n            api.$http({\n                url: url,\n                withCredentials: api.use_session,\n                method: method.toUpperCase(),\n                headers: {'X-CSRFToken': api.$cookies['csrftoken']},\n                params: params,\n                data: data\n            })\n\n            .success(angular.bind(api, function(data, status, headers, config) {\n                resolve(data, status);\n            }))\n\n            .error(angular.bind(api, function(data, status, headers, config) {\n                console.log(\"error syncing with: \" + url);\n                \n                // Set request status\n                if (data) {\n                    data.status = status;\n                }\n                \n                if (status == 0) {\n                    if (data == \"\") {\n                        data = {};\n                        data['status'] = 0;\n                        data['non_field_errors'] = [\"Could not connect. Please try again.\"];\n                    }\n                    // or if the data is null, then there was a timeout.\n                    if (data == null) {\n                        // Inject a non field error alerting the user\n                        // that there's been a timeout error.\n                        data = {};\n                        data['status'] = 0;\n                        data['non_field_errors'] = [\"Server timed out. Please try again.\"];\n                    }\n                }\n\n                reject(data, status, headers, config);\n            }));\n        });\n    }\n\n    clearUserToken() {\n        var api = this;\n        api.$cookies.remove('token');\n    }\n\n    register(username, password1, password2, email, more) {\n        var data = {\n            'username':username,\n            'password1':password1,\n            'password2':password2,\n            'email':email,\n            'activation_url': this.$state.href('verifyEmail').replace(/\\/+/g, \"/\"),\n        }\n        data = angular.extend(data, more);\n        return this.request({\n            'method': \"POST\",\n            'url': \"/registration/\",\n            'data' :data\n        });\n    }\n\n    login(username, password) {\n        var api = this;\n        delete api.$http.defaults.headers.common.Authorization;\n        api.$cookies.remove('token');\n        return api.request({\n            'method': \"POST\",\n            'url': \"/login/\",\n            'data':{\n                'username':username,\n                'password':password\n            }\n        }).then(function(data) {\n            if (!api.use_session) {\n                api.$http.defaults.headers.common.Authorization = 'Token ' + data.key;\n                api.$cookies.put(\"token\", data.key);\n            }\n        });\n    }\n\n    logout() {\n        var api = this;\n        return api.request({\n            'method': \"POST\",\n            'url': \"/logout/\",\n        }).then(function(data) {\n            delete api.$http.defaults.headers.common.Authorization;\n            api.clearUserToken();\n        });\n    }\n    \n    changePassword(password1, password2) {\n        return this.request({\n            'method': \"POST\",\n            'url': \"/password/change/\",\n            'data': {\n                'new_password1': password1,\n                'new_password2': password2\n            }\n        });\n    }\n    \n    resetPassword(email) {\n        return this.request({\n            'method': \"POST\",\n            'url': \"/password/reset/\",\n            'data': {\n                'email': email,\n                'reset_url': this.$state.href('resetConfirm').replace(/\\/+/g, \"/\"),\n                'site_name': 'ebagis',\n            }\n        });\n    }\n    \n    profile() {\n        return this.request({\n            'method': \"GET\",\n            'url': \"/user/\",\n        }); \n    }\n    \n    updateProfile(data) {\n        return this.request({\n            'method': \"PATCH\",\n            'url': \"/user/\",\n            'data': data\n        }); \n    }\n    \n    verify(key) {\n        return this.request({\n            'method': \"POST\",\n            'url': \"/registration/verify-email/\",\n            'data': {'key': key} \n        });            \n    }\n    \n    confirmReset(uid, token, password1, password2) {\n        return this.request({\n            'method': \"POST\",\n            'url': \"/password/reset/confirm/\",\n            'data': {\n                'uid': uid,\n                'token': token,\n                'new_password1':password1,\n                'new_password2':password2\n            }\n        });\n    }\n    \n    initialize(url, sessions) {\n        this.API_URL = url;\n        this.use_session = sessions;\n    }\n\n}\n\napp.service('ebagisAPI', ['$http', '$cookies', '$state', ebagisAPI]);\n\napp.controller('LoginController', ['$scope', '$state', 'Validate', 'UserProfile', function ($scope, $state, Validate, UserProfile) {\n    $scope.model = {\n        'username': '',\n        'password': '',\n    };\n    $scope.complete = false;\n\n    $scope.login = function(formData) {\n        $scope.errors = [];\n        Validate.form_validation(formData,$scope.errors);\n        \n        if (!formData.$invalid) {\n            UserProfile.login($scope.model.username, $scope.model.password)\n            .then(function() {\n                // successful login so redirect to the home page\n                $state.go('home');\n            }).catch(function(err) {\n                    // error case\n                    $scope.errors = err;\n            });\n        }\n    }\n}]);\n\napp.controller('LogoutController', ['$scope', '$state', 'UserProfile', function ($scope, $state, UserProfile) {\n    UserProfile.logout().then(function(){\n        $state.go('login');\n    }).catch(function(err) {\n        console.log(err);\n    });\n}]);\n\napp.controller('MainController', ['$scope', '$cookies', '$location', 'ebagisAPI', 'UserProfile', function ($scope, $cookies, $location, ebagisAPI, UserProfile) {\n    \n    $scope.login = function(){\n      UserProfile.login(prompt('Username'),prompt('password'))\n      .then(function(data){\n        handleSuccess(data);\n      },handleError);\n    }\n    \n    $scope.logout = function(){\n      UserProfile.logout()\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.resetPassword = function(){\n      ebagisAPI.resetPassword(prompt('Email'))\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.register = function(){\n      ebagisAPI.register(prompt('Username'),prompt('Password'),prompt('Email'))\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.verify = function(){\n      ebagisAPI.verify(prompt(\"Please enter verification code\"))\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.goVerify = function(){\n      $location.path(\"/verifyEmail/\"+prompt(\"Please enter verification code\"));\n    }\n    \n    $scope.changePassword = function(){\n      ebagisAPI.changePassword(prompt(\"Password\"), prompt(\"Repeat Password\"))\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.profile = function(){\n      ebagisAPI.profile()\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.updateProfile = function(){\n      ebagisAPI.updateProfile({'first_name': prompt(\"First Name\"), 'last_name': prompt(\"Last Name\"), 'email': prompt(\"Email\")})\n      .then(handleSuccess,handleError);\n    }\n    \n    $scope.confirmReset = function(){\n      ebagisAPI.confirmReset(prompt(\"Code 1\"), prompt(\"Code 2\"), prompt(\"Password\"), prompt(\"Repeat Password\"))\n      .then(handleSuccess,handleError);\n    }\n\n    $scope.goConfirmReset = function(){\n      $location.path(\"/passwordResetConfirm/\"+prompt(\"Code 1\")+\"/\"+prompt(\"Code 2\"))\n    }\n    \n    var handleSuccess = function(data){\n      $scope.response = data;\n    }\n    \n    var handleError = function(data){\n      $scope.response = data;\n    }\n\n    $scope.show_login = true;\n    $scope.$on(\"UserProfile.logged_in\", function(data){\n      $scope.show_login = false;\n    });\n    $scope.$on(\"UserProfile.logged_out\", function(data){\n      $scope.show_login = true;\n    });\n\n}]);\n\nclass MapClass {\n    \n    constructor() {\n        this.map = L.map('map').setView([40, -99], 4);\n    }\n}\n\napp.service(\"Map\", [MapClass]);\n\napp.controller('MapController', ['$scope', 'UserProfile', 'Map', function ($scope, UserProfile, Map) {\n    $scope.user = UserProfile.data;\n    var aoi_names;\n    var geojson_layer; \n    var tokenval = UserProfile.api.$cookies.get('token');\n    var sortState = \"ascending\";\n    var map = Map.map\n\n    // from http://stackoverflow.com/questions/8996963/how-to-perform-case-insensitive-sorting-in-javascript\n    function insensitive(s1, s2) {\n        var s1lower = s1.toLowerCase();\n        var s2lower = s2.toLowerCase();\n        return s1lower > s2lower? 1 : (s1lower < s2lower? -1 : 0);\n    }\n\n    function addFeatureRows() {\n        if (sortState === 'ascending') {\n          aoi_names.sort(insensitive);\n        } else if (sortState === 'descending') {\n          (aoi_names.sort(insensitive)).reverse();\n        }\n        $(\"#feature-list tbody\").empty();\n        for (var i in aoi_names) {\n            var toAdd = '<tr class=\"feature-row\" value=\"' + aoi_names[i] + '\"><td style=\"vertical-align: middle;\"><img width=\"16px\" height=\"18px\" src=\"water.png\"></td><td class=\"feature-name\">' + aoi_names[i] + '</td><td style=\"vertical-align: middle;\"</td></tr>'\n            $(\"#feature-list tbody\").append(toAdd);\n        }\n    }\n\n    function formatJSON(obj, currKey) {\n        var content =  \"<div id=\\\"bar_content\\\">\";\n        function recurse(obj, indent) {\n          var content2 = '';\n          if (obj) {\n              for (var key in obj) {   \n                if (typeof obj[key] === \"object\") {\n                  var value;\n                  if(obj[key] === null || obj[key] === \"\")\n                    value = \"none\";\n                  else\n                    value = '';\n                  //console.log('key: ' + key + ' is of type ' + typeof key + '\\n' + 'obj: ' + obj + '\\n' + 'obj[key] ' + obj[key]);\n                  content2 += \"<div>\" + String.fromCharCode(160).repeat(indent) + key + ':  ' + value  + \"</div>\";\n                  content2 += recurse(obj[key], indent += 4);  \n                } else if (typeof obj[key] !== \"function\") {\n                    var value;\n                    //console.log('key: ' + key + ' is of type ' + typeof key + '\\n' + 'obj: ' + obj + '\\n' + 'obj[key] ' + obj[key]);\n                    if ((typeof obj[key] === 'Array' && obj[key].length === 0) || obj[key] === \"\" || obj[key] === null) {\n                      value = \"none\";\n                    } else {\n                      value = obj[key];\n                    }\n                    content2 += \"<div>\" + String.fromCharCode(160).repeat(indent) + key + ':  ' + value +  \"</div>\";\n                }\n              }\n          }\n          return content2;\n        }\n        content += recurse(obj, 0);\n        return content + \"</div>\";\n    } \n\n    // add control layer\n    var controlBar = L.control.bar('bar', {\n        position: 'bottom',\n        visible: false,\n    });\n    map.addControl(controlBar);\n\n    // load a tile layer\n    var baselayer = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    {\n        attribution: 'Tiles by <a href=\"http://mapc.org\">MAPC</a>',\n    }).addTo(map);\n\n    var defaultStyle = {\n        \"color\": \"#b20000\",\n        \"weight\": 0,\n        \"fillOpacity\": .75\n    };\n\n    var highlightStyle = {\n        \"fillColor\": \"#0000b2\",\n        \"fillOpacity\": \"8\",\n    };\n\n    // request for the aoi names\n    jQuery.ajax({\n      'type': 'GET',\n      'url': window.appConfig.restURL + '/aois/?format=geojson',\n      'datatype': 'json',\n      'headers':  {'Authorization': 'Token ' + tokenval},\n      'success': function(data) { \n        aoi_names = new Array();\n        geojson_layer = L.geoJson(data, {\n            onEachFeature: function(feature,layer){\n              layer.bindPopup(feature.properties.name);\n            },\n            style: defaultStyle\n        }).addTo(map);\n        //console.log(geojson_layer.getBounds());\n        map.fitBounds(geojson_layer.getBounds(), {\"animate\":true});\n        L.control.scale().addTo(map);\n        // console.log(data.features); \n      }\n    });\n\n\n    $(document).on(\"click\", \".feature-row\", function(event){\n      var value = this.getAttribute('value'); \n      var aoiname = ' ';\n      geojson_layer.eachLayer(function (layer) {  \n          //console.log('this.value ' + value);\n          if(layer.feature.properties.name == value) { \n          //console.log('if: ' + layer.feature.properties.name); \n              layer.setStyle(highlightStyle) \n          layer.bringToFront();\n          //console.log(layer.feature.properties);\n          aoiname = layer.feature.properties.url;\n          aoiname = aoiname.substring(0, aoiname.indexOf('?'));\n          //console.log(aoiname);\n          map.fitBounds(layer.getBounds(), {\n              \"maxZoom\": 9,\n              \"animate\": true,\n          });\n          } else {\n              geojson_layer.resetStyle(layer);\n              controlBar.hide();\n          } \n      });\n\n      // request for the detailed view data\n      jQuery.ajax({\n        'type': 'GET',\n        'url': aoiname,\n        'datatype': 'json',\n        'headers':  {'Authorization': 'Token ' + tokenval},\n        'success': function(data) { \n          //console.log(data);\n          controlBar.setContent(formatJSON(data));\n         // console.log(r(data));\n         setTimeout(function(){ controlBar.show() }, 500); \n        }\n      });\n    });\n\n    map.on('moveend', function(event){\n        aoi_names = new Array();\n        $(\"#feature-list tbody\").empty();\n        geojson_layer.eachLayer(function (layer) {      \n          if (map.getBounds().intersects(layer.getLatLngs())) {\n           aoi_names.push(layer.feature.properties.name);\n          }\n        });\n        addFeatureRows(); \n    });\n\n    $('#sort-btn').on('click', function(event){\n        sortState = 'descending';\n        addFeatureRows();\n        $('.panel-body').empty();\n        $('.panel-body').append('<div class=\"row\"><input type=\"text\" class=\"form-control search\" placeholder=\"Filter\" /><button type=\"button\" class=\"btn sort asc\" data-sort=\"feature-name\" id=\"sort-btndesc\"><i class=\"fa fa-sort-alpha-desc\" aria-hidden=\"true\"></i> Sort</button></div>');\n    });\n\n    $(document).on('click', '#sort-btndesc', function(){\n        sortState = 'ascending';\n        addFeatureRows();\n        $('.panel-body').empty();\n        $('.panel-body').append('<div class=\"row\"><input type=\"text\" class=\"form-control search\" placeholder=\"Filter\" /><button type=\"button\" class=\"btn sort\" data-sort=\"feature-name\" id=\"sort-btnasc\"><i class=\"fa fa-sort-alpha-asc\" aria-hidden=\"true\"></i> Sort</button></div>');\n    });\n\n    $(document).on('click', '#sort-btnasc', function(){\n        sortState = 'descending';\n        addFeatureRows();\n        $('.panel-body').empty();\n        $('.panel-body').append('<div class=\"row\"><input type=\"text\" class=\"form-control search\" placeholder=\"Filter\" /><button type=\"button\" class=\"btn sort\" data-sort=\"feature-name\" id=\"sort-btndesc\"><i class=\"fa fa-sort-alpha-desc\" aria-hidden=\"true\"></i> Sort</button></div>');\n    });\n}]);\n\napp.controller('PasswordChangeController', function ($scope, ebagisAPI, Validate) {\n    $scope.model = {'new_password1':'','new_password2':''};\n    $scope.complete = false;\n    $scope.changePassword = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        ebagisAPI.changePassword($scope.model.new_password1, $scope.model.new_password2)\n        .then(function(data){\n            // success case\n            $scope.complete = true;\n        },function(data){\n            // error case\n            $scope.errors = data;\n        });\n      }\n    }\n  });\n\napp.controller('PasswordResetController', function ($scope, $state, $timeout, ebagisAPI, Validate) {\n    $scope.processForm = function(email) {\n        //$scope.errors = [];\n        //Validate.form_validation(email, $scope.errors);\n        //if (!$scope.email.$invalid) {\n            console.log($scope.email);\n            ebagisAPI.resetPassword($scope.email)\n            .then(function(data) {\n                // success case\n                console.log(data);\n                $scope.$apply(function() {\n                    $scope.message = data.success;\n                });\n                $timeout(function(){$state.go(\"login\");}, 3000);\n            }, function(data) {\n                // error case\n                console.log(data);\n                $scope.$apply(function () {\n                    $scope.errors = data;\n                });\n            });\n        //}\n    };\n});\n\n/*\napp.controller('PasswordResetController', function ($scope, $state, $timeout, ebagisAPI, Validate) {\n    $scope.model = {'email': ''};\n    $scope.complete = false;\n    $scope.resetPassword = function(formData) {\n        $scope.errors = [];\n        Validate.form_validation(formData, $scope.errors);\n        if (!formData.$invalid) {\n            ebagisAPI.resetPassword($scope.model.email)\n            .then(function(data) {\n                // success case\n                $scope.$apply(function() {\n                    $scope.complete = true;\n                });\n                $timeout(function(){$state.go(\"login\");}, 3000);\n            },function(data){\n                // error case\n                $scope.$apply(function() {\n                    $scope.errors = data;\n                });\n            });\n        }\n    }\n});\n*/\n\napp.controller('PasswordResetConfirmController', function ($scope, $stateParams, $state, $timeout, ebagisAPI, Validate) {\n    $scope.model = {'new_password1':'','new_password2':''};\n    $scope.complete = false;\n    $scope.confirmReset = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        ebagisAPI.confirmReset($stateParams['userToken'], $stateParams['passwordResetToken'], $scope.model.new_password1, $scope.model.new_password2)\n        .then(function(data){\n            // success case\n            $scope.$apply(function() {\n                $scope.complete = true;\n            });\n            $timeout(function(){$state.go(\"login\");}, 3000);\n        },function(data){\n            // error case\n            $scope.$apply(function() {\n                $scope.errors = data;\n            });\n        });\n      }\n    }\n  });\n\napp.controller('RestrictedController', function ($scope, $location) {\n    $scope.$on('UserProfile.logged_in', function() {\n      $location.path('/');\n    });\n  });\n\napp.controller('RegisterController', function ($scope, ebagisAPI, Validate) {\n    $scope.model = {'username':'','password':'','email':''};\n    $scope.complete = false;\n    $scope.register = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        ebagisAPI.register($scope.model.username,$scope.model.password1,$scope.model.password2,$scope.model.email)\n        .then(function(data){\n            // success case\n            $scope.$apply(function() {\n                $scope.complete = true;\n            });\n        },function(data){\n            // error case\n            $scope.$apply(function() {\n                $scope.errors = data;\n            });\n        });\n      }\n    }\n  });\n\napp.service('Validate', function Validate() {\n    return {\n        'message': {\n            'minlength': 'This value is not long enough.',\n            'maxlength': 'This value is too long.',\n            'email': 'A properly formatted email address is required.',\n            'required': 'This field is required.'\n        },\n        'more_messages': {\n            'demo': {\n                'required': 'Here is a sample alternative required message.'\n            }\n        },\n        'check_more_messages': function(name,error){\n            return (this.more_messages[name] || [])[error] || null;\n        },\n        validation_messages: function(field,form,error_bin){\n            var messages = [];\n            for(var e in form[field].$error){\n                if(form[field].$error[e]){\n                    var special_message = this.check_more_messages(field,e);\n                    if(special_message){\n                        messages.push(special_message);\n                    }else if(this.message[e]){\n                        messages.push(this.message[e]);\n                    }else{\n                        messages.push(\"Error: \" + e)\n                    }\n                }\n            }\n            var deduped_messages = [];\n            angular.forEach(messages, function(el, i){\n                if(deduped_messages.indexOf(el) === -1) deduped_messages.push(el);\n            });\n            if(error_bin){\n                error_bin[field] = deduped_messages;\n            }\n        },\n        'form_validation': function(form,error_bin){\n            for(var field in form){\n                if(field.substr(0,1) != \"$\"){\n                    this.validation_messages(field,form,error_bin);\n                }\n            }\n        }\n    }\n});\n\napp.controller('VerifyEmailController', function ($scope, $stateParams, ebagisAPI) {\n    ebagisAPI.verify($stateParams[\"emailVerificationToken\"]).then(function(data){\n        $scope.success = true;\n    },function(data){\n        $scope.failure = false;\n    });\n  });\n",null],"sourceRoot":"/source/"}